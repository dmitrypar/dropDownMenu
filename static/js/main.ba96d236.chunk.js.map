{"version":3,"sources":["data.js","searchFilter/searchFilter.js","App.js","serviceWorker.js","index.js"],"names":["itemList","SearchFilter","useState","filter","setFilter","chosedItems","setChosedItems","dropDownList","setDropDownList","isHighlighted","cursor","setCursor","keyFunction","useCallback","event","keyCode","c","filtredItems","length","useEffect","document","addEventListener","removeEventListener","item","toLowerCase","includes","dropDownListToggle","className","map","fi","idx","key","onClick","el","current","value","type","onChange","e","target","placeholder","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2RAAaA,EAAW,CACtB,6CACA,yDACA,6CACA,qEACA,8FACA,oGACA,6CACA,iCACA,0GACA,6CACA,uCACA,6CACA,+DACA,+FACA,0GACA,uCACA,yDACA,6CACA,iCACA,+DACA,oGACA,yDACA,mDACA,6CACA,mDACA,iCACA,6CACA,iCACA,0GACA,mDACA,6CACA,iHACA,mDACA,mDACA,uCACA,2BACA,sEACA,6CACA,iCACA,6CACA,6CACA,uFACA,6CACA,yDACA,2GACA,wFACA,6CACA,iCACA,iCACA,uCACA,uCACA,2BACA,yDACA,yDACA,uCACA,uCACA,sEACA,mDACA,uCACA,yDACA,mDACA,6CACA,6CACA,+DACA,uCACA,uCACA,2BACA,iCACA,uCACA,6CACA,mDACA,8IACA,uCACA,uCACA,wFACA,mDACA,6CACA,iCACA,yDACA,mDACA,2BACA,2BACA,mDACA,mDACA,6CACA,uCACA,iCACA,0DACA,yDACA,oGACA,mDACA,6CACA,uCACA,iCACA,iCACA,2BACA,mDACA,iCACA,oGACA,mDACA,oGACA,oFACA,kEACA,uCACA,0DACA,2BACA,uCACA,sEACA,+DACA,2BACA,uCACA,uCACA,6CACA,iCACA,iCACA,iCACA,qEACA,+DACA,mDACA,+DACA,+DACA,6CACA,yDACA,uCACA,mDACA,2BACA,mDACA,uCACA,yDACA,0GACA,6CACA,+DACA,mDACA,6CACA,uCACA,mDACA,+DACA,6CACA,uCACA,6KACA,6CACA,iCACA,iCACA,iCACA,6CACA,+DACA,yDACA,2BACA,kFACA,wFACA,mDACA,6CACA,uKACA,2BACA,0DACA,8FACA,2GACA,8HACA,0IACA,mDACA,iCACA,yDACA,uCACA,4GACA,mDACA,2BACA,6CACA,uCACA,+DACA,iFACA,gEACA,8FACA,6CACA,uCACA,uCACA,6CACA,yDACA,iCACA,0DACA,sGACA,oGACA,yDACA,yDACA,2JACA,gHACA,gGACA,6CACA,oIACA,gGACA,0DACA,uCACA,mDACA,iCACA,mDACA,mDACA,+IACA,0GACA,uCACA,+DACA,iCACA,6CACA,sEACA,qEACA,6CACA,6CACA,0DACA,mDACA,6EACA,2BACA,6CACA,iCACA,+FACA,uCACA,iCACA,sMACA,2EACA,uCACA,uCACA,+DACA,6CACA,6CACA,oGACA,iCACA,yDACA,yDACA,6CACA,4HACA,mDACA,8LACA,qBACA,+DACA,iCACA,2BACA,yDACA,uCACA,oDACA,6CACA,4HACA,6CACA,6CACA,6CACA,sEACA,2JACA,uCACA,wCCxIaC,G,MAzGM,WAAO,IAAD,EACGC,mBAAS,IADZ,mBAClBC,EADkB,KACVC,EADU,OAEaF,mBAAS,IAFtB,mBAElBG,EAFkB,KAELC,EAFK,OAGeJ,oBAAS,GAHxB,mBAGlBK,EAHkB,KAGJC,EAHI,OAIDN,mBAAS,iBAA1BO,EAJkB,sBAKGP,mBAAS,GALZ,mBAKlBQ,EALkB,KAKVC,EALU,KAOnBC,EAAcC,uBAClB,SAACC,GACC,OAAQA,EAAMC,SACZ,KAAK,GACHP,GAAgB,GAChB,MACF,KAAK,GACHG,GAAU,SAACK,GAAD,OAAQA,EAAI,EAAIA,EAAI,EAAI,KAClC,MACF,KAAK,GACHL,GAAU,SAACK,GAAD,OAAQA,EAAIC,EAAaC,OAAS,EAAIF,EAAI,EAAIA,KACxD,MACF,QACE,UAGN,CAACL,EAAWL,IAGda,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,UAAWT,GAAa,GAE3C,WACLQ,SAASE,oBAAoB,UAAWV,GAAa,MAEtD,CAACA,EAAaD,IAEjB,IAAMM,EAAejB,EAASG,QAAO,SAACoB,GACpC,OAAOA,EAAKC,cAAcC,SAAStB,EAAOqB,kBAQtCE,EAAqB,WACzBlB,GAAiBD,IAcnB,OACE,yBAAKoB,UAAU,UACb,yBAAKA,UAAU,eACZtB,EAAYuB,KAAI,SAACC,EAAIC,GAAL,OACf,4BAAQC,IAAKD,EAAKH,UAAU,eACzBE,EACD,uBAAGG,QAAS,kBAVFC,EAUmBJ,OATrCvB,EAAeD,EAAYF,QAAO,SAAC+B,GAAD,OAAaA,IAAYD,MAD1C,IAACA,IAWR,0BAAMN,UAAU,eAAhB,aAIN,2BACEQ,MAAOhC,EACP6B,QAASN,EACTU,KAAK,OACLT,UAAU,UACVU,SAAU,SAACC,GAAD,OApCGH,EAoCgBG,EAAEC,OAAOJ,MAnC5C/B,EAAU+B,QACV3B,GAAgB,GAFE,IAAC2B,GAqCbK,YAAY,uBAEd,4BAAQR,QAASN,EAAoBC,UAAU,kBAC7C,yCAIHpB,GACC,wBAAIoB,UAAU,YACXV,EAAaW,KAAI,SAACZ,EAAGc,GACpB,OACE,wBAAIC,IAAKD,GACP,uBACEH,UAAS,uBACPG,IAAQpB,EAASD,EAAgB,IAEnCgC,KAAK,IACLT,QAAS,kBA7CJT,EA6CsBP,EA5CpCX,EAAYoB,SAASF,IACxBjB,EAAe,GAAD,mBAAKD,GAAL,CAAkBkB,UAElCnB,EAAU,IAJQ,IAACmB,IA+CJP,WCjFJ0B,MAZf,WAGA,OAEC,yBAAKf,UAAU,aACZ,kBAAC,EAAD,QCCgBgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9B,SAAS+B,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ba96d236.chunk.js","sourcesContent":["export const itemList = [\r\n  \"Абхазия\",\r\n  \"Австралия\",\r\n  \"Австрия\",\r\n  \"Азербайджан\",\r\n  \"Азорские острова\",\r\n  \"Аландские острова\",\r\n  \"Албания\",\r\n  \"Алжир\",\r\n  \"Американское Самоа\",\r\n  \"Ангилья\",\r\n  \"Ангола\",\r\n  \"Андорра\",\r\n  \"Антарктика\",\r\n  \"Антигуа и Барбуда\",\r\n  \"Антильские Острова\",\r\n  \"Аомынь\",\r\n  \"Аргентина\",\r\n  \"Армения\",\r\n  \"Аруба\",\r\n  \"Афганистан\",\r\n  \"Багамские Острова\",\r\n  \"Бангладеш\",\r\n  \"Барбадос\",\r\n  \"Бахрейн\",\r\n  \"Беларусь\",\r\n  \"Белиз\",\r\n  \"Бельгия\",\r\n  \"Бенин\",\r\n  \"Бермудские Острова\",\r\n  \"Болгария\",\r\n  \"Боливия\",\r\n  \"Босния и Герцеговина\",\r\n  \"Ботсвана\",\r\n  \"Бразилия\",\r\n  \"Бруней\",\r\n  \"Буве\",\r\n  \"Буркина-Фасо\",\r\n  \"Бурунди\",\r\n  \"Бутан\",\r\n  \"Вануату\",\r\n  \"Ватикан\",\r\n  \"Великобритания\",\r\n  \"Венгрия\",\r\n  \"Венесуэла\",\r\n  \"Виргинские Острова \",\r\n  \"Восточный Тимор\",\r\n  \"Вьетнам\",\r\n  \"Габон\",\r\n  \"Гаити\",\r\n  \"Гайана\",\r\n  \"Гамбия\",\r\n  \"Гана\",\r\n  \"Гваделупа\",\r\n  \"Гватемала\",\r\n  \"Гвиана\",\r\n  \"Гвинея\",\r\n  \"Гвинея-Бисау\",\r\n  \"Германия\",\r\n  \"Гернси\",\r\n  \"Гибралтар\",\r\n  \"Гондурас\",\r\n  \"Гонконг\",\r\n  \"Гренада\",\r\n  \"Гренландия\",\r\n  \"Греция\",\r\n  \"Грузия\",\r\n  \"Гуам\",\r\n  \"Дания\",\r\n  \"Джерси\",\r\n  \"Джибути\",\r\n  \"Доминика\",\r\n  \"Доминиканская Республика\",\r\n  \"Египет\",\r\n  \"Замбия\",\r\n  \"Западная Сахара\",\r\n  \"Зимбабве\",\r\n  \"Израиль\",\r\n  \"Индия\",\r\n  \"Индонезия\",\r\n  \"Иордания\",\r\n  \"Ирак\",\r\n  \"Иран\",\r\n  \"Ирландия\",\r\n  \"Исландия\",\r\n  \"Испания\",\r\n  \"Италия\",\r\n  \"Йемен\",\r\n  \"Кабо-Верде\",\r\n  \"Казахстан\",\r\n  \"Каймановы Острова\",\r\n  \"Камбоджа\",\r\n  \"Камерун\",\r\n  \"Канада\",\r\n  \"Катар\",\r\n  \"Кения\",\r\n  \"Кипр\",\r\n  \"Кирибати\",\r\n  \"Китай\",\r\n  \"Кокосовые Острова\",\r\n  \"Колумбия\",\r\n  \"Коморские Острова\",\r\n  \"Корея (Северная)\",\r\n  \"Корея (Южная)\",\r\n  \"Косово\",\r\n  \"Коста-Рика\",\r\n  \"Куба\",\r\n  \"Кувейт\",\r\n  \"Кука острова\",\r\n  \"Кыргызстан\",\r\n  \"Лаос\",\r\n  \"Латвия\",\r\n  \"Лесото\",\r\n  \"Либерия\",\r\n  \"Ливан\",\r\n  \"Ливия\",\r\n  \"Литва\",\r\n  \"Лихтенштейн\",\r\n  \"Люксембург\",\r\n  \"Маврикий\",\r\n  \"Мавритания\",\r\n  \"Мадагаскар\",\r\n  \"Майотта\",\r\n  \"Македония\",\r\n  \"Малави\",\r\n  \"Малайзия\",\r\n  \"Мали\",\r\n  \"Мальдивы\",\r\n  \"Мальта\",\r\n  \"Мартиника\",\r\n  \"Маршалловы Острова\",\r\n  \"Мексика\",\r\n  \"Микронезия\",\r\n  \"Мозамбик\",\r\n  \"Молдова\",\r\n  \"Монако\",\r\n  \"Монголия\",\r\n  \"Монтсеррат\",\r\n  \"Морокко\",\r\n  \"Мьянма\",\r\n  \"Нагорно-Карабахская Республика\",\r\n  \"Намибия\",\r\n  \"Науру\",\r\n  \"Непал\",\r\n  \"Нигер\",\r\n  \"Нигерия\",\r\n  \"Нидерланды\",\r\n  \"Никарагуа\",\r\n  \"Ниуэ\",\r\n  \"Новая Зеландия\",\r\n  \"Новая Каледония\",\r\n  \"Норвегия\",\r\n  \"Норфолк\",\r\n  \"Объединенные Арабские Эмираты\",\r\n  \"Оман\",\r\n  \"Остров Мэн\",\r\n  \"Остров Рождества\",\r\n  \"Остров Святой Елены\",\r\n  \"Острова Уоллис и Футуна\",\r\n  \"Острова Херд и Макдональд\",\r\n  \"Пакистан\",\r\n  \"Палау\",\r\n  \"Палестина\",\r\n  \"Панама\",\r\n  \"Папуа — Новая Гвинея\",\r\n  \"Парагвай\",\r\n  \"Перу\",\r\n  \"Питкэрн\",\r\n  \"Польша\",\r\n  \"Португалия\",\r\n  \"Приднестровье\",\r\n  \"Пуэрто-Рико\",\r\n  \"Республика Конго\",\r\n  \"Реюньон\",\r\n  \"Россия\",\r\n  \"Руанда\",\r\n  \"Румыния\",\r\n  \"Сальвадор\",\r\n  \"Самоа\",\r\n  \"Сан-Марино\",\r\n  \"Сан-Томе и Принсипи\",\r\n  \"Саудовская Аравия\",\r\n  \"Свазиленд\",\r\n  \"Свальбард\",\r\n  \"Северные Марианские острова\",\r\n  \"Сейшельские острова\",\r\n  \"Сен-Пьер и Микелон\",\r\n  \"Сенегал\",\r\n  \"Сент-Винсент и Гренадины\",\r\n  \"Сент-Киттс и Невис\",\r\n  \"Сент-Люсия\",\r\n  \"Сербия\",\r\n  \"Сингапур\",\r\n  \"Сирия\",\r\n  \"Словакия\",\r\n  \"Словения\",\r\n  \"Соединенные Штаты Америки\",\r\n  \"Соломоновы Острова\",\r\n  \"Сомали\",\r\n  \"Сомалиленд\",\r\n  \"Судан\",\r\n  \"Суринам\",\r\n  \"Сьерра-Леоне\",\r\n  \"Таджикистан\",\r\n  \"Таиланд\",\r\n  \"Тайвань\",\r\n  \"Тамил-Илам\",\r\n  \"Танзания\",\r\n  \"Тёркс и Кайкос\",\r\n  \"Того\",\r\n  \"Токелау\",\r\n  \"Тонга\",\r\n  \"Тринидад и Тобаго\",\r\n  \"Тувалу\",\r\n  \"Тунис\",\r\n  \"Турецкая Республика Северного Кипра\",\r\n  \"Туркменистан\",\r\n  \"Турция\",\r\n  \"Уганда\",\r\n  \"Узбекистан\",\r\n  \"Украина\",\r\n  \"Уругвай\",\r\n  \"Фарерские Острова\",\r\n  \"Фиджи\",\r\n  \"Филиппины\",\r\n  \"Финляндия\",\r\n  \"Франция\",\r\n  \"Французская Полинезия\",\r\n  \"Хорватия\",\r\n  \"Центральноафриканская Республика\",\r\n  \"Чад\",\r\n  \"Черногория\",\r\n  \"Чехия\",\r\n  \"Чили\",\r\n  \"Швейцария\",\r\n  \"Швеция\",\r\n  \"Шри-Ланка\",\r\n  \"Эквадор\",\r\n  \"Экваториальная Гвинея\",\r\n  \"Эритрея\",\r\n  \"Эстония\",\r\n  \"Эфиопия\",\r\n  \"Южная Осетия\",\r\n  \"Южно-Африканская Республика\",\r\n  \"Ямайка\",\r\n  \"Япония\",\r\n];\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { itemList } from \"../data\";\r\nimport \"./searchFilter.css\";\r\n\r\nconst SearchFilter = () => {\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [chosedItems, setChosedItems] = useState([]);\r\n  const [dropDownList, setDropDownList] = useState(false);\r\n  const [isHighlighted] = useState(\"isHighlighted\");\r\n  const [cursor, setCursor] = useState(0);\r\n\r\n  const keyFunction = useCallback(\r\n    (event) => {\r\n      switch (event.keyCode) {\r\n        case 27:\r\n          setDropDownList(false);\r\n          break;\r\n        case 38:\r\n          setCursor((c) => (c > 0 ? c - 1 : 0));\r\n          break;\r\n        case 40:\r\n          setCursor((c) => (c < filtredItems.length - 1 ? c + 1 : c));\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n    },\r\n    [setCursor, setChosedItems]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", keyFunction, false);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", keyFunction, false);\r\n    };\r\n  }, [keyFunction, setCursor]);\r\n\r\n  const filtredItems = itemList.filter((item) => {\r\n    return item.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n\r\n  const inputFilter = (value) => {\r\n    setFilter(value);\r\n    setDropDownList(true);\r\n  };\r\n\r\n  const dropDownListToggle = () => {\r\n    setDropDownList(!dropDownList);\r\n  };\r\n\r\n  const onChoseItem = (item) => {\r\n    if (!chosedItems.includes(item)) {\r\n      setChosedItems([...chosedItems, item]);\r\n    }\r\n    setFilter(\"\");\r\n  };\r\n\r\n  const deleteItem = (el) => {\r\n    setChosedItems(chosedItems.filter((current) => current !== el));\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <div className=\"inputFilter\">\r\n        {chosedItems.map((fi, idx) => (\r\n          <button key={idx} className=\"chosedItems\">\r\n            {fi}\r\n            <a onClick={() => deleteItem(fi)}>\r\n              <span className=\"delElemItem\">&#215;</span>\r\n            </a>\r\n          </button>\r\n        ))}\r\n        <input\r\n          value={filter}\r\n          onClick={dropDownListToggle}\r\n          type=\"text\"\r\n          className=\"myInput\"\r\n          onChange={(e) => inputFilter(e.target.value)}\r\n          placeholder=\"Search for names..\"\r\n        />\r\n        <button onClick={dropDownListToggle} className=\"dropdownbutton\">\r\n          <a> &#9660; </a>\r\n        </button>\r\n      </div>\r\n\r\n      {dropDownList && (\r\n        <ul className=\"listItem\">\r\n          {filtredItems.map((c, idx) => {\r\n            return (\r\n              <li key={idx}>\r\n                <a\r\n                  className={`listItemlink ${\r\n                    idx === cursor ? isHighlighted : \"\"\r\n                  }`}\r\n                  href=\"#\"\r\n                  onClick={() => onChoseItem(c)}\r\n                >\r\n                  {c}\r\n                </a>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchFilter;\r\n","import React from 'react';\nimport './App.css';\nimport SearchFilter from './searchFilter/searchFilter'\n\n\nfunction App() {\n\n\nreturn (\n\n <div className=\"container\">\n    <SearchFilter/>\n </div>\n\n)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}